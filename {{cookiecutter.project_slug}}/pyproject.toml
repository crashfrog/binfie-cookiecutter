[project]
name = "{{cookiecutter.project_name}}"
dynamic = ["version", "authors"]
description = "{{cookiecutter.project_short_description}}"
dependencies = [
    "click"
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3"
]

[project.urls]
Homepage = "{{cookiecutter.project_url}}"
Issues = "{{cookiecutter.project_url}}/issues"
Documentation = "{{cookiecutter.project_url}}/docs"


{%- if cookiecutter.project_shell_cmd %}
[project.scripts]
{{ cookiecutter.project_shell_cmd }} = "{{ cookiecutter.project_slug }}.cli:cli"
{% endif %}

[project.optional-dependencies]
dev = [
    "flake8",
    "black",
    "tox",
    "sphinx",
    "twine",
    "setuptools_scm",
    "coverage",
    "zest.releaser"
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-runner",
    "hypothesis"
]

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[tool.setuptools.scm]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.hypothesis]
deadline = 200

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310

[testenv]
deps = pytest
commands = pytest

[testenv:lint]
deps = flake8
commands = flake8 my_project

[testenv:black]
deps = black
commands = black --check my_project

[testenv:coverage]
deps = coverage
commands =
    coverage run --source=my_project -m pytest
    coverage report
"""

[tool.flake8]
max-line-length = 88
extend-ignore = E203, W503

[tool.black]
line-length = 88

[tool.sphinx]
project = "{{cookiecutter.project_name}}"
author = "{{cookiecutter.full_name}}"

[tool.twine]
username = "{{cookiecutter.pypi_username}}"