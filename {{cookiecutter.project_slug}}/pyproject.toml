[project]
name = "{{cookiecutter.project_name}}"
dynamic = ["version", "authors"]
description = "{{cookiecutter.project_short_description}}"
dependencies = [
    "click"
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3"
]

[project.urls]
Homepage = "{{cookiecutter.project_url}}"
Issues = "{{cookiecutter.project_url}}/issues"
Documentation = "{{cookiecutter.project_url}}/docs"


{%- if cookiecutter.project_shell_cmd %}
[project.scripts]
{{ cookiecutter.project_shell_cmd }} = "{{ cookiecutter.project_slug }}.cli:cli"
{% endif %}

[project.optional-dependencies]
dev = [
    "flake8",
    "black",
    "tox",
    "sphinx",
    "twine",
    "setuptools_scm",
    "coverage",
    "zest.releaser"
]
test = [
    "pytest",
    "pytest-cov",
    "pytest-runner",
    "hypothesis"
]

[build-system]
requires = ["setuptools>=61.0", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.project_slug }}"
authors = [
    {name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}"},
]
description = "{{ cookiecutter.project_short_description }}"
readme = {file = "README.md", content-type="text/markdown"}
requires-python = ">=3.7"
keywords = ["{{ cookiecutter.project_slug }}"]
classifiers = [
        'Natural Language :: English',
        'Programming Language :: Python :: 3.7',
]
dependencies = [
    {%- if cookiecutter.project_shell_cmd %}"Click ~= 8.1.3"{% endif %}
]
dynamic = ["version"]

{% if cookiecutter.project_shell_cmd %}
[project.scripts]
    {{ cookiecutter.project_shell_cmd }} = '{{ cookiecutter.project_slug }}.cli:cli'
{%- endif %}

[project.urls]
Homepage = 'https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}'
Issues = 'https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/issues'

[project.optional-dependencies]
test = [    {%- if cookiecutter.use_pytest == 'y' %}'pytest',
    'pytest-runner',
    {%- endif %}
    ]
dev = [
    'configparser',
    'pytest',
    'hypothesis',
    'black',
    'flake8',
    'sphinx',
    'tox',
    'twine',
    'coverage',
    'zest.releaser',
]

[tool.setuptools.packages]
find = {}

[tool.setuptools_scm]